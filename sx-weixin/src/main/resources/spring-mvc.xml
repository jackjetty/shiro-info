<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" 
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd"> 
    
    
     
       <!-- 引入  配置文件  -->
	   <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
	        <list>
		        <value>classpath:properties/weixin.properties</value>
	        </list>
        </property>
     </bean> 

	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				 
				<bean
						class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<ref bean="fastJsonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	<bean id="fastJsonHttpMessageConverter"
		  class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json</value>
			</list>
		</property>
	</bean>

 
		
	<!-- 放过springmvc拦截的配置信息 -->
 	<mvc:resources mapping="/resources/**" location="/resources/" />
 	
 	<!-- <mvc:resources mapping="/ueditor/**" location="/ueditor/" /> -->
 	
	<context:component-scan base-package="com.sx.weixin" >   
	    <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />   
	    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />    
	</context:component-scan>
	
	
 	<mvc:annotation-driven /> 
	


	<!-- FreeMarker视图解析 在这里配置后缀名ftl和视图解析器。。 -->
	<bean id="freemarkerConfiguration"
		  class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:/properties/freemarker.properties" />
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <!-- 设置上传文件的最大尺寸为10MB -->
	    <property name="maxUploadSize">
	        <value>10048576</value>
	    </property>
	    <property name="defaultEncoding" value="utf-8" />
	    <property name="maxInMemorySize" value="40960" />    
	</bean>
	 
    <!-- 拦截器 -->  
    <mvc:interceptors>
    	<mvc:interceptor>
    	    <mvc:mapping path="/accident/guide" />
			<mvc:mapping path="/home/mi" />
			<mvc:mapping path="/home/mq" />
			<mvc:mapping path="/home/ms" />
			<mvc:mapping path="/summary/**" />
			<mvc:mapping path="/carmove/capture1" />
			<mvc:mapping path="/dic_case/grid" />
			<mvc:mapping path="/case/grid" />
			<mvc:mapping path="/recruit/grid" />
			<mvc:mapping path="/user/grid" />
			<mvc:mapping path="/index" />
			<mvc:mapping path="/issue/detail" />
			<mvc:mapping path="/product/detail" />
			<mvc:mapping path="/recruit/detail" />
    		<bean class="com.sx.weixin.interceptor.WeiXinOAuth2Interceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- freemarker的配置 -->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/views/" />
		<property name="freemarkerSettings" ref="freemarkerConfiguration"/>
	</bean>
	<!-- FreeMarker视图解析   如返回student。。在这里配置后缀名ftl和视图解析器。。-->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">

		<property name="viewClass" value="com.sx.weixin.view.MyFreeMarkerView"></property>
		<!--  <property name="viewNames" value="*.html" />-->
		<property name="suffix" value="" />
		<property name="contentType" value="text/html;charset=utf-8" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="requestContextAttribute" value="base" />
		<property name="allowSessionOverride" value="true"/>
	</bean>
	<!-- 方式二：使用MethodInvokingJobDetailFactoryBean，任务类可以不实现Job接口，通过targetMethod指定调用方法-->  
	<bean id="annalsTaskJobDetail"
	    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="wxJob" />
		<property name="targetMethod" value="annalsTask" />
		<property name="concurrent" value="false" />
	</bean> 
	<!-- ======================== 调度触发器 ======================== -->    
	 <bean id="annalsTaskTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
            <property name="jobDetail">
                <ref bean="annalsTaskJobDetail"/>
            </property>
            <property name="cronExpression">
                <value>0 0 0 1/2 * ?</value>
            </property>
    </bean>
    
	 <!-- ======================== 调度工厂 ======================== -->  
	<bean id="SpringJobSchedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
	    <property name="triggers">  
	        <list>  
	            <ref bean="annalsTaskTrigger"/>  
	        </list>  
	    </property>  
	</bean>    

</beans>